buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.liquibase:liquibase-core:4.31.1"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.openapi.generator' version '7.12.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

compileJava {
    dependsOn 'openApiGenerate'
}

repositories {
    mavenCentral()
}

dependencies {
    // SPRING
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // POSTGRESQL
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'

    //LIQUIBASE
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.liquibase:liquibase-core:4.31.1'

    // LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // OPENAPI
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'


    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:r2dbc:1.19.0'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'com.redis:testcontainers-redis:2.2.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'io.r2dbc:r2dbc-h2'
}

test {
    systemProperty 'spring.profiles.active', 'test'
    useJUnitPlatform()
}

bootJar {
    launchScript()
}

openApiGenerate {
    generatorName.set("java")
    inputSpec.set("${rootProject.projectDir}/payments/src/main/resources/openapi/payments.yml")

    def genDir = layout.buildDirectory.dir("generated")
    outputDir.set(genDir.map { it.asFile.absolutePath })

    modelPackage.set("ru.umd.intershop.client.model")
    apiPackage.set("ru.umd.intershop.client.api")

    configOptions.set([
            sourceFolder        : "src/main/java",
            library             : "webclient",
            dateLibrary         : "java8",
            useRuntimeException : "true",
            reactive            : "true",
            interfaceOnly       : "false",
            apiPackage          : "ru.umd.intershop.client.api",
            modelPackage        : "ru.umd.intershop.client.model",
            skipDefaultInterface: "true",
            typeMappings        : "double=java.math.BigDecimal",
            useJakartaEe        : "true"
    ])
}

sourceSets {
    main {
        java {
            srcDir layout.buildDirectory.dir("generated/src/main/java")
        }
    }
}


